CREATE DATABASE [CodeTest] CONTAINMENT = NONE
	ON PRIMARY (
		NAME = N'CodeTest',
		FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\CodeTest.mdf',
		SIZE = 8192KB,
		FILEGROWTH = 8192KB		-- Since it's a demo project.
	)
	LOG ON (
		NAME = N'CodeTest_log',
		FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\CodeTest_log.ldf',
		SIZE = 8192KB,
		FILEGROWTH = 8192KB		-- Since it's a demo project.
	)
GO

ALTER DATABASE [CodeTest] SET COMPATIBILITY_LEVEL = 140
GO
ALTER DATABASE [CodeTest] SET ANSI_NULL_DEFAULT OFF
GO
ALTER DATABASE [CodeTest] SET ANSI_NULLS OFF
GO
ALTER DATABASE [CodeTest] SET ANSI_PADDING OFF
GO
ALTER DATABASE [CodeTest] SET ANSI_WARNINGS OFF
GO
ALTER DATABASE [CodeTest] SET ARITHABORT OFF
GO
ALTER DATABASE [CodeTest] SET AUTO_CLOSE OFF
GO
ALTER DATABASE [CodeTest] SET AUTO_SHRINK OFF
GO
ALTER DATABASE [CodeTest] SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF)
GO
ALTER DATABASE [CodeTest] SET AUTO_UPDATE_STATISTICS ON
GO
ALTER DATABASE [CodeTest] SET CURSOR_CLOSE_ON_COMMIT OFF
GO
ALTER DATABASE [CodeTest] SET CURSOR_DEFAULT GLOBAL
GO
ALTER DATABASE [CodeTest] SET CONCAT_NULL_YIELDS_NULL OFF
GO
ALTER DATABASE [CodeTest] SET NUMERIC_ROUNDABORT OFF
GO
ALTER DATABASE [CodeTest] SET QUOTED_IDENTIFIER OFF
GO
ALTER DATABASE [CodeTest] SET RECURSIVE_TRIGGERS OFF
GO
ALTER DATABASE [CodeTest] SET DISABLE_BROKER
GO
ALTER DATABASE [CodeTest] SET AUTO_UPDATE_STATISTICS_ASYNC OFF
GO
ALTER DATABASE [CodeTest] SET DATE_CORRELATION_OPTIMIZATION OFF
GO
ALTER DATABASE [CodeTest] SET PARAMETERIZATION SIMPLE
GO
ALTER DATABASE [CodeTest] SET READ_COMMITTED_SNAPSHOT OFF
GO
ALTER DATABASE [CodeTest] SET READ_WRITE
GO
ALTER DATABASE [CodeTest] SET RECOVERY SIMPLE
GO
ALTER DATABASE [CodeTest] SET MULTI_USER
GO
ALTER DATABASE [CodeTest] SET PAGE_VERIFY CHECKSUM
GO
ALTER DATABASE [CodeTest] SET TARGET_RECOVERY_TIME = 60 SECONDS
GO
ALTER DATABASE [CodeTest] SET DELAYED_DURABILITY = DISABLED
GO

USE [CodeTest]
GO
ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = Off;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = Primary;
GO
ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
GO
ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = On;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = Primary;
GO
ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = Off;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = Primary;
GO

USE [CodeTest]
GO
IF NOT EXISTS (SELECT name FROM sys.filegroups WHERE is_default=1 AND name = N'PRIMARY') ALTER DATABASE [CodeTest] MODIFY FILEGROUP [PRIMARY] DEFAULT
GO


CREATE TABLE dbo.Vehicle (
	ID			INT				IDENTITY(1,1)	NOT NULL,
	Model		NVARCHAR(50)					NOT NULL,
	Year		SMALLINT						NOT NULL,
	Description NVARCHAR(MAX)					NULL,

	CONSTRAINT PK_Vehicle PRIMARY KEY CLUSTERED (
		ID ASC
	)

	WITH (
		PAD_INDEX = OFF,
		STATISTICS_NORECOMPUTE = OFF,
		IGNORE_DUP_KEY = OFF,
		ALLOW_ROW_LOCKS = ON,
		ALLOW_PAGE_LOCKS = ON
	) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

EXEC sys.sp_addextendedproperty
	@name=N'MS_Description',
	@value=N'PK',
	@level0type=N'SCHEMA',
	@level0name=N'dbo',
	@level1type=N'TABLE',
	@level1name=N'Vehicle',
	@level2type=N'COLUMN',
	@level2name=N'ID'
GO

CREATE UNIQUE NONCLUSTERED INDEX IX_Model_Year
	ON dbo.Vehicle (Model, Year);
GO



CREATE PROCEDURE dbo.ListVehicles
AS
BEGIN
	SELECT * FROM dbo.Vehicle;
END
GO

CREATE PROCEDURE dbo.GetVehicle(@ID INT) AS
BEGIN
	SELECT * FROM dbo.Vehicle
		WHERE ID = @ID;
END
GO

CREATE PROCEDURE dbo.AddVehicle(
	@Model			NVARCHAR(50),
	@Year			SMALLINT,
	@Description	NVARCHAR(MAX) = NULL
) AS
BEGIN
	INSERT INTO dbo.Vehicle
	(
		Model,
		Year,
		Description
	)
	VALUES
	(
		@Model,
		@Year,
		@Description
	);

	SELECT * FROM dbo.Vehicle
		WHERE ID = SCOPE_IDENTITY();
END
GO

CREATE PROCEDURE dbo.UpdateVehicle(
	@ID				INT,
	@Model			NVARCHAR(50),
	@Year			SMALLINT,
	@Description	NVARCHAR(MAX) = NULL
) AS
BEGIN
	UPDATE dbo.Vehicle
	SET
		Model = @Model,
		Year = @Year,
		Description = @Description
	WHERE ID = @ID;

	SELECT * FROM dbo.Vehicle
		WHERE ID = @ID;
END
GO

CREATE PROCEDURE dbo.RemoveVehicle(@ID INT) AS
BEGIN
	DELETE FROM dbo.Vehicle
		WHERE ID = @ID;
END
GO
